- content_for :title, "View Products"

= stylesheet_link_tag 'products'

.container-fluid.pad-edge
  .row
    .d-flex.justify-content-between.w-100
      %h1.pt-5
        - if not params[:search_term].blank? 
          Listing products related to 
          = "'" + params["search_term"] + "'"
          %h4= link_to 'Show all products', products_path, class: 'col-form-label px-2'
        - else 
          Our crowdsourced products 

      -# Add product button
      - if can?(:new, Product)
        .my-auto
          .btn.btn-ecommerce.mx-2
            %i.fa.fa-plus
            = link_to 'New Product', new_product_path


  .d-flex
    .me-auto.my-auto
      %h5
        = page_entries_info products, :model => 'product'



    -# Filter dropdown menus
    - if products.size > 0
      .my-auto
        = form_with url: products_path, method: :get do |form|
          .input-group
            .mx-2= sort_link @q, :name, "Name"
            .mx-2= sort_link @q, :price, "Price"
            .mx-2= sort_link @q, :co2_produced, "CO2 Produced"
            .mx-2= sort_link @q, :manufacturer, "Manufacturer"
     
    -# .align-self-center.btn.suggestions#filters
    %i.fa.fa-filter.fa-2x.icon-color
      -# %p.icon-color Sort By
  %hr




  .products.row.row-cols-1.row-cols-md-4
    - products.each do |product|
      = render partial: 'suggested_product_card', locals: {p: product.decorate}
   
  %br

  .justify-content-center.pagination.mb-5
    = will_paginate(products, :renderer => WillPaginate::ActionView::Bootstrap4LinkRenderer)

